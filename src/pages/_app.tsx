import { type Session } from "next-auth";
import { SessionProvider } from "next-auth/react";
import { type AppType } from "next/app";

import { api } from "~/utils/api";

import "~/styles/globals.css";
import Head from "next/head";
import { SideNav } from "~/components/SideNav";
import { SearchAndTrendsNav } from "~/components/SearchAndTrendsNav";
import { Toaster } from "sonner";
import { useState } from "react";
import { usePathname } from "next/navigation";
import { useRouter } from "next/router";

const MyApp: AppType<{ session: Session | null }> = ({
  Component,
  pageProps: { session, ...pageProps },
}) => {
  const [nav, setNav] = useState("home");
  const paths = ["/settings", "/likes", "/following"];
  const pathname = usePathname();
  const router = useRouter();
  const handleHomePage = () => {
    setNav("home");
    router.push("/");
  };
  const handleSearchPage = () => {
    setNav("search");
    router.push("/");
  };
  const handleMenuPage = () => {
    setNav("side");
    router.push("/");
  };
  return (
    <SessionProvider session={session}>
      <Head>
        <title>Twitter clone</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link
          href="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap"
          rel="stylesheet"
        />
      </Head>
      <div className="hidden w-full items-start mobile:flex">
        <SideNav />
        <div className="min-h-screen w-full flex-grow">
          <Component {...pageProps} />
        </div>
        <SearchAndTrendsNav />
      </div>
      <div className="block px-4 mobile:hidden">
        {(nav == "home" || pathname != "/") && (
          <div className="min-h-screen w-full flex-grow">
            <Component {...pageProps} />
          </div>
        )}
        {nav == "side" && !paths.includes(pathname) && <SideNav />}
        {nav == "search" && <SearchAndTrendsNav />}
      </div>
      <div className="fixed bottom-0 flex h-[50px] w-full items-center justify-around bg-[#06121d] mobile:hidden">
        <div
          className="flex h-full flex-grow items-center justify-center"
          onClick={handleHomePage}
        >
          Home
        </div>
        <div
          className="flex h-full flex-grow items-center justify-center"
          onClick={handleMenuPage}
        >
          Menu
        </div>
        <div
          className="flex h-full flex-grow items-center justify-center"
          onClick={handleSearchPage}
        >
          Search
        </div>
      </div>
      <Toaster position="top-center" richColors />
    </SessionProvider>
  );
};

export default api.withTRPC(MyApp);
